from flask import Flask, render_template
import os
import shutil

def generate_static_site():
    # –°–æ–∑–¥–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = Flask(__name__, template_folder='templates', static_folder='static')
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–æ—É—Ç—ã
    @app.route('/')
    def index():
        return render_template('index.html', 
                             title='–ì–ª–∞–≤–Ω–∞—è - –ù–∞–∏—Ä',
                             active_page='index')
    
    @app.route('/karta')
    def karta():
        return render_template('karta.html',
                             title='–ö–∞—Ä—Ç–∞ - –ù–∞–∏—Ä', 
                             active_page='karta')
    
    @app.route('/lor')
    def lor():
        return render_template('lor.html',
                             title='–õ–æ—Ä - –ù–∞–∏—Ä',
                             active_page='lor')
    
    @app.route('/ankety')
    def ankety():
        return render_template('ankety.html',
                             title='–ê–Ω–∫–µ—Ç—ã - –ù–∞–∏—Ä', 
                             active_page='ankety')
    
    # –ü–∞–ø–∫–∞ –¥–ª—è –≤—ã—Ö–æ–¥–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (GitHub Pages –∏—Å–ø–æ–ª—å–∑—É–µ—Ç /docs –∏–ª–∏ /public)
    output_dir = "docs"
    
    # –û—á–∏—â–∞–µ–º –≤—ã—Ö–æ–¥–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    if os.path.exists(output_dir):
        shutil.rmtree(output_dir)
    os.makedirs(output_dir)
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    print("–ö–æ–ø–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã...")
    shutil.copytree('static', os.path.join(output_dir, 'static'))
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–º–µ–Ω—ã url_for –Ω–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—É—Ç–∏
    def fix_urls(html_content):
        replacements = {
            "{{ url_for('static', filename='": "static/",
            "{{ url_for('index') }}": "index.html",
            "{{ url_for('karta') }}": "karta.html", 
            "{{ url_for('lor') }}": "lor.html",
            "{{ url_for('ankety') }}": "ankety.html"
        }
        
        for old, new in replacements.items():
            html_content = html_content.replace(old, new)
            
        return html_content
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    print("–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
    
    with app.test_request_context():
        # –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        html = render_template('index.html', 
                             title='–ì–ª–∞–≤–Ω–∞—è - –ù–∞–∏—Ä',
                             active_page='index')
        fixed_html = fix_urls(html)
        with open(os.path.join(output_dir, 'index.html'), 'w', encoding='utf-8') as f:
            f.write(fixed_html)
        
        # –ö–∞—Ä—Ç–∞
        html = render_template('karta.html',
                             title='–ö–∞—Ä—Ç–∞ - –ù–∞–∏—Ä',
                             active_page='karta')
        fixed_html = fix_urls(html)
        with open(os.path.join(output_dir, 'karta.html'), 'w', encoding='utf-8') as f:
            f.write(fixed_html)
        
        # –õ–æ—Ä
        html = render_template('lor.html',
                             title='–õ–æ—Ä - –ù–∞–∏—Ä', 
                             active_page='lor')
        fixed_html = fix_urls(html)
        with open(os.path.join(output_dir, 'lor.html'), 'w', encoding='utf-8') as f:
            f.write(fixed_html)
        
        # –ê–Ω–∫–µ—Ç—ã
        html = render_template('ankety.html',
                             title='–ê–Ω–∫–µ—Ç—ã - –ù–∞–∏—Ä',
                             active_page='ankety')
        fixed_html = fix_urls(html)
        with open(os.path.join(output_dir, 'ankety.html'), 'w', encoding='utf-8') as f:
            f.write(fixed_html)
    
    # –°–æ–∑–¥–∞–µ–º .nojekyll —Ñ–∞–π–ª –¥–ª—è GitHub Pages
    with open(os.path.join(output_dir, '.nojekyll'), 'w') as f:
        f.write('')
    
    print(f"‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∞–π—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –≤ –ø–∞–ø–∫–µ {output_dir}!")
    print("üìù –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö GitHub Pages —É–∫–∞–∑–∞—Ç—å source: docs")

if __name__ == '__main__':
    generate_static_site()