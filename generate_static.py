import os
import shutil
from flask import Flask, render_template

def create_app():
    app = Flask(__name__)
    
    @app.route('/')
    def index():
        return render_template('index.html', 
                             title='–ì–ª–∞–≤–Ω–∞—è - –ù–∞–∏—Ä',
                             active_page='index')
    
    @app.route('/karta')
    def karta():
        return render_template('karta.html',
                             title='–ö–∞—Ä—Ç–∞ - –ù–∞–∏—Ä', 
                             active_page='karta')
    
    @app.route('/lor')
    def lor():
        return render_template('lor.html',
                             title='–õ–æ—Ä - –ù–∞–∏—Ä',
                             active_page='lor')
    
    @app.route('/ankety')
    def ankety():
        return render_template('ankety.html',
                             title='–ê–Ω–∫–µ—Ç—ã - –ù–∞–∏—Ä', 
                             active_page='ankety')
    
    return app

def generate_static_site():
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–∞–π—Ç–∞...")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = create_app()
    
    # –í—ã—Ö–æ–¥–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
    output_dir = "docs"
    
    # –û—á–∏—â–∞–µ–º –≤—ã—Ö–æ–¥–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    if os.path.exists(output_dir):
        print(f"üßπ –û—á–∏—â–∞–µ–º –ø–∞–ø–∫—É {output_dir}...")
        shutil.rmtree(output_dir)
    
    os.makedirs(output_dir)
    print(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ {output_dir}")
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    print("üì∏ –ö–æ–ø–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã...")
    if os.path.exists('static'):
        shutil.copytree('static', os.path.join(output_dir, 'static'))
        print("‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã")
    else:
        print("‚ùå –ü–∞–ø–∫–∞ static –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return False
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–º–µ–Ω—ã Flask –ø—É—Ç–µ–π –Ω–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ
    def fix_urls(html_content):
        replacements = {
            "{{ url_for('static', filename='": "static/",
            "{{ url_for('index') }}": "index.html",
            "{{ url_for('karta') }}": "karta.html", 
            "{{ url_for('lor') }}": "lor.html",
            "{{ url_for('ankety') }}": "ankety.html",
            "') }}": ""  # –£–±–∏—Ä–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–µ —Ç–µ–≥–∏
        }
        
        for old, new in replacements.items():
            html_content = html_content.replace(old, new)
            
        return html_content
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    print("üìÑ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
    
    with app.test_request_context():
        try:
            # –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
            print("  üìù index.html...")
            html = render_template('index.html', 
                                 title='–ì–ª–∞–≤–Ω–∞—è - –ù–∞–∏—Ä',
                                 active_page='index')
            fixed_html = fix_urls(html)
            with open(os.path.join(output_dir, 'index.html'), 'w', encoding='utf-8') as f:
                f.write(fixed_html)
            
            # –ö–∞—Ä—Ç–∞
            print("  üìù karta.html...")
            html = render_template('karta.html',
                                 title='–ö–∞—Ä—Ç–∞ - –ù–∞–∏—Ä',
                                 active_page='karta')
            fixed_html = fix_urls(html)
            with open(os.path.join(output_dir, 'karta.html'), 'w', encoding='utf-8') as f:
                f.write(fixed_html)
            
            # –õ–æ—Ä
            print("  üìù lor.html...")
            html = render_template('lor.html',
                                 title='–õ–æ—Ä - –ù–∞–∏—Ä', 
                                 active_page='lor')
            fixed_html = fix_urls(html)
            with open(os.path.join(output_dir, 'lor.html'), 'w', encoding='utf-8') as f:
                f.write(fixed_html)
            
            # –ê–Ω–∫–µ—Ç—ã
            print("  üìù ankety.html...")
            html = render_template('ankety.html',
                                 title='–ê–Ω–∫–µ—Ç—ã - –ù–∞–∏—Ä',
                                 active_page='ankety')
            fixed_html = fix_urls(html)
            with open(os.path.join(output_dir, 'ankety.html'), 'w', encoding='utf-8') as f:
                f.write(fixed_html)
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ HTML: {e}")
            return False
    
    # –°–æ–∑–¥–∞–µ–º .nojekyll —Ñ–∞–π–ª
    with open(os.path.join(output_dir, '.nojekyll'), 'w') as f:
        f.write('')
    
    # –°–æ–∑–¥–∞–µ–º CNAME —Ñ–∞–π–ª –µ—Å–ª–∏ –Ω—É–∂–µ–Ω –¥–æ–º–µ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    # with open(os.path.join(output_dir, 'CNAME'), 'w') as f:
    #     f.write('your-domain.com')
    
    print(f"‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∞–π—Ç —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –≤ –ø–∞–ø–∫–µ {output_dir}!")
    print("üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ docs:")
    for root, dirs, files in os.walk(output_dir):
        level = root.replace(output_dir, '').count(os.sep)
        indent = ' ' * 2 * level
        print(f'{indent}{os.path.basename(root)}/')
        subindent = ' ' * 2 * (level + 1)
        for file in files:
            print(f'{subindent}{file}')
    
    return True

if __name__ == '__main__':
    success = generate_static_site()
    exit(0 if success else 1)